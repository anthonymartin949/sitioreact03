{"version":3,"sources":["logo.svg","components/C01componente.jsx","components/C02contador.js","components/C03compCssObj.js","components/C03compCss.js","components/C04estado.js","components/C05dobleestado.js","components/C06variable.js","components/C07operador.js","components/C08matriz.js","App.js","reportWebVitals.js","index.js"],"names":["C01componente","C02contador","estiloObj","estilo1","backgroundColor","fontSize","C03componenteConCss","className","style","color","padding","EjemploDeEstado","useState","numero","setNumero","onClick","console","log","EjemploDeDobleEstado","valor","setValor","ComponenteConVariable","props","xVariable","OperadorTernario","edad","xEdad","Matriz","lista","map","doc","item","indice","push","xValor","xIndice","indice_de_p","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,I,YCUAA,EARO,WAClB,OACI,wFCMOC,EARK,WAChB,OACI,wFCGOC,G,MAPG,CACdC,QAAS,CACLC,gBAAiB,SACjBC,SAAU,SCwBHC,EAtBa,WACxB,OACI,sBAAKC,UAAU,kBAAf,UACI,6EAEA,wBAAQC,MAAO,CAACJ,gBAAgB,QAASK,MAAM,OAAQC,QAAQ,OAA/D,oFAGA,uBAEA,oFAGA,uBAEA,wBAAQF,MAAOA,EAAML,QAArB,6E,OCWGQ,EA7BS,WAKpB,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OACI,sBAAKN,MAAO,CAACJ,gBAAgB,eAA7B,UACI,mFAEA,iEAAoCS,EAApC,OAEA,wBAAQE,QAfC,WACbC,QAAQC,IAAI,cACZH,EAAUD,EAAS,IAaf,2BAEA,2BCDGK,EAxBc,WAEzB,MAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA4BR,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAOA,OACI,eAAC,WAAD,WACI,kFAEA,wBAAQC,QAAS,kBAAIK,EAASD,EAAM,IAApC,kDACA,8DAAiCA,KACjC,uBAEA,wBAAQJ,QAZM,WAClBD,EAAUD,EAAS,GACfG,QAAQC,IAAI,wBAUZ,kDACA,8DAAiCJ,SCV9BQ,EATe,SAACC,GAC3B,OACI,sBAAKd,MAAO,CAACJ,gBAAgB,eAA7B,UACI,sIACA,yDAA4BkB,EAAMC,iBCY/BC,EAhBU,SAACF,GAEtB,IAAMG,EAAOH,EAAMI,MAEnB,OACI,eAAC,WAAD,WACI,kGACA,mDAAsBD,EAAtB,QAEA,iEACKA,GAAQ,GAAI,iBAAkB,wBCyBhCE,EAnCA,WACX,MAA0Bf,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,KAAhD,mBAAOgB,EAAP,UAEA,OACI,eAAC,WAAD,WACI,sFAEA,oBAAIpB,MAAO,CAACJ,gBAAgB,SAA5B,+DACIwB,EAAMC,KAAI,SAACC,GAAD,OAASA,KACvB,uBAEA,qDACIF,EAAMC,KAAI,SAACE,GAAD,OAAU,qCAAQA,EAAR,UAExB,iEACIH,EAAMC,KAAI,SAACV,EAAOa,GAAR,OAAmB,kCAAKA,EAAL,MAAgBb,EAAhB,UAEjC,kEAEIS,EAAMK,KAAK,KACXL,EAAMC,KAAI,SAACV,EAAOa,GAAR,OAAmB,mCAAMA,EAAN,MAAiBb,EAAjB,WAEjC,uBACA,8FAEIS,EAAMC,KAAI,SAACK,EAAQC,GAAT,OACN,oBAAGC,YAAeD,EAAlB,UACKA,EADL,MACiBD,QAIzB,2BCCGG,MAxBf,WACE,OACC,gCACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,CAAuBd,UAAU,kBACjC,uBACA,cAAC,EAAD,CAAkBG,MAAQ,OAC1B,uBACA,cAAC,EAAD,QCfUY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.922b547a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from  'react'\r\n\r\nconst C01componente = () => {\r\n    return(\r\n        <div>\r\n            Componente 1. Definido con función flecha (rafce)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default C01componente\r\n/*\r\nimport React from 'react';\r\nconst OtroComponente = () => {\r\n    return ( <h1>Otro componente con nombre propio</h1> );\r\n}\r\n \r\nexport default OtroComponente;\r\n*/","import React from 'react'\r\n\r\nconst C02contador = () => {\r\n    return (\r\n        <div>\r\n            Componente 2. Definido con función flecha (rafce)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default C02contador\r\n","const estiloObj = {\r\n    estilo1: {\r\n        backgroundColor: 'yellow',\r\n        fontSize: '1em',\r\n    },\r\n}\r\n\r\nexport default estiloObj","//rafce\r\nimport React from 'react'\r\nimport \"./C03compCss.css\"               //Archivo css con stilos normales\r\nimport style from './C03compCssObj.js'  //Archivo js con estilos como objeto\r\n\r\nconst C03componenteConCss = () => {\r\n    return (\r\n        <div className=\"marcoComponente\">\r\n            <h4>Componente 3. Con formas de definir estilos</h4>\r\n\r\n            <button style={{backgroundColor:'green', color:'blue', padding:'3px'}}>\r\n                Botón 1 con estilos en línea de atributos (Definido como objeto)\r\n            </button>\r\n            <hr/>\r\n\r\n            <button>\r\n                Botón 2 con estilos en archivo css (normal)\r\n            </button>\r\n            <br/>\r\n\r\n            <button style={style.estilo1}>\r\n                Botón 3 con estilos en archivo js (Definido como objeto)\r\n            </button>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default C03componenteConCss","import React, {useState} from 'react';\r\n\r\nconst EjemploDeEstado = () => {\r\n    //\"numero\"  nombre del estado y puede iniciar como numero,\r\n    //boleano, objeto, matriz, etc.\r\n    //\"setNumero\" es el modificador de estado \"numero\"\r\n\r\n    const [numero, setNumero] = useState(0);\r\n\r\n    //Definiendo función flecha que incrementa un valor\r\n    const aumentar = () =>{\r\n        console.log(\"Hacer clic\");\r\n        setNumero(numero + 1);\r\n    }\r\n\r\n    //Dentro de HTML, se da lectura en llaves a las variables\r\n    //Se puede devolver sólo UN elemento..., caso contrario\r\n    //Se puede usar <Fragment> ó <div>\r\n    //En el evento onclick se llama a la función flecha entre llaves\r\n    return(\r\n        <div style={{backgroundColor:'yellowgreen'}}>\r\n            <h4>Componente 4. Ejemplo con definición de estado</h4>\r\n\r\n            <h3>Muestra incremento de valor... {numero} </h3>\r\n\r\n            <button onClick={aumentar} >Aumentar en 1</button>\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\nexport default EjemploDeEstado;","import React, {useState, Fragment} from 'react';\r\n\r\nconst EjemploDeDobleEstado = () => {\r\n\r\n    const [valor, setValor] = useState(0);\r\n    const [numero, setNumero] = useState(0);\r\n\r\n    //Definición función que incremente un valor\r\n    const IncrementoDos = () =>{\r\n        setNumero(numero + 1);\r\n            console.log(\"Mensaje de contador\");\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h4>Componente 5. Ejemplo con dos estados diferentes</h4>\r\n\r\n            <button onClick={()=>setValor(valor+1)}>Contador 1. Con función abreviada</button>\r\n            <span>Incremento de contador 1: {valor}</span>\r\n            <hr/>\r\n\r\n            <button onClick={IncrementoDos}>Contador 2. Con llamada a función</button>\r\n            <span>Incremento de contador 2: {numero}</span>\r\n        </Fragment>        \r\n    );\r\n}\r\n\r\nexport default EjemploDeDobleEstado;","import React from 'react';\r\n\r\nconst ComponenteConVariable = (props) => {\r\n    return(\r\n        <div style={{backgroundColor:'yellowgreen'}}>\r\n            <h4>Componente 6. Muestra de recepción y lectura de variable, enviada cuando es llamado el componente</h4>\r\n            <span>Lectura de variable: {props.xVariable}</span>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ComponenteConVariable;","import React, {Fragment} from 'react';\r\n\r\nconst OperadorTernario = (props) => {\r\n    \r\n    const edad = props.xEdad;\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h4>Componente 7. Con variable recibida ejecuta operadores Ternarios</h4>\r\n            <h3>Valor recibido: ({edad}) </h3>\r\n\r\n            <h3>Resultado de operador ternario:\r\n                {edad >= 18? ' Mayor de edad': ' Menor de edad'}\r\n            </h3>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default OperadorTernario;","import React, {useState, Fragment} from 'react';\r\n\r\nconst Matriz = () => {\r\n    const [lista, setLista] = useState([10,20,30,44,50]);   //matriz de numeros\r\n\r\n    return (\r\n        <Fragment>\r\n            <h4>Componente 8. Varias formas de lectura de una matriz</h4>\r\n\r\n            <h1 style={{backgroundColor:'yelow'}}>1. Lectura (\"doc\" es cualquier variable) sin html</h1>\r\n            {   lista.map((doc) => doc )}\r\n            <br/>\r\n\r\n            <h1>2. Lectura con html</h1>\r\n            {   lista.map((item) => <span> {item} </span>)}\r\n\r\n            <h1>3. Lectura al indice y su valor</h1>\r\n            {   lista.map((valor, indice) => <p> {indice} / {valor} </p> ) }\r\n\r\n            <h1>4. Lectura al indice y su valor</h1>\r\n            {\r\n                lista.push(100),    //Agregando un valor a matriz inicial\r\n                lista.map((valor, indice) => <p>  {indice} / {valor} </p>)\r\n            }\r\n            <br/>\r\n            <h1>5. Lectura a donde se asigne \"Indice\" a \"p\" osea al parrafo </h1>\r\n            {\r\n                lista.map((xValor, xIndice) =>\r\n                    <p indice_de_p = {xIndice} >\r\n                        {xIndice} - {xValor}\r\n                    </p>\r\n                )\r\n            }\r\n            <br/>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default Matriz;","import logo from './logo.svg';\nimport './App.css';\nimport C01componente from './components/C01componente';\nimport C02contador from './components/C02contador';\nimport C03componenteConCss from './components/C03compCss';\nimport EjemploDeEstado from './components/C04estado';\nimport EjemploDeDobleEstado from './components/C05dobleestado';\nimport ComponenteConVariable from './components/C06variable';\nimport OperadorTernario from './components/C07operador';\nimport Matriz from './components/C08matriz';\nfunction App() {\n  return (\n   <div>\n     <C01componente/>\n     <hr />\n     <C02contador/>\n     <hr />\n     <C03componenteConCss/>\n     <hr />\n     <EjemploDeEstado/>\n     <hr/>\n     <EjemploDeDobleEstado/>\n     <hr/>\n     <ComponenteConVariable xVariable=\"Hola mundo...\"/>\n     <hr/>\n     <OperadorTernario xEdad = '20'/>\n     <hr/>\n     <Matriz />\n       \n   </div>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}